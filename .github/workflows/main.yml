name: Main

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_call:

jobs:
  format_and_lint_programs:
    name: Format & Lint Programs
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          clippy: true
          rustfmt: true

      - name: Format Programs
        run: pnpm programs:format

      - name: Lint Programs
        run: pnpm programs:lint

  format_and_lint_client_js:
    name: Format & Lint Client JS
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Build Client JS
        run: pnpm clients:js:build

      - name: Format Client JS
        run: pnpm clients:js:format:check

      - name: Lint Client JS
        run: pnpm clients:js:lint

  audit_rust:
    name: Audit Rust
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-audit
          cargo-audit: true

      - name: Run cargo-audit
        run: pnpm rust:audit

  spellcheck_rust:
    name: Spellcheck Rust
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-spellcheck
          cargo-spellcheck: true

      - name: Run cargo-spellcheck
        run: pnpm rust:spellcheck

  build_programs:
    name: Build programs
    runs-on: ubuntu-latest
    needs: format_and_lint_programs
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-programs
          solana: true

      - name: Build Programs
        run: pnpm programs:build

      - name: Upload Program Builds
        uses: actions/upload-artifact@v4
        with:
          name: program-builds
          path: ./target/deploy/*.so
          if-no-files-found: error

      - name: Save Program Builds For Client Jobs
        uses: actions/cache/save@v4
        with:
          path: ./**/*.so
          key: ${{ runner.os }}-builds-${{ github.sha }}

  test_programs:
    name: Test Programs
    runs-on: ubuntu-latest
    needs: format_and_lint_programs
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-program-tests
          cargo-cache-fallback-key: cargo-programs
          solana: true

      # Main program tests depend on the test-transfer-hook .so file,
      # so it's required to build prior to testing
      - name: Build Programs
        run: pnpm programs:build

      - name: Test Programs
        run: pnpm programs:test

  format_and_lint_cli:
    name: Format & Lint CLI
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-cli
          cli: true
          purge: true
          clippy: true
          rustfmt: true

      - name: Format CLI
        run: pnpm clients:cli:format

      - name: Lint CLI
        run: pnpm clients:cli:lint

  test_client_cli:
    name: Test Client CLI
    runs-on: ubuntu-latest
    needs: build_programs
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-cli
          cli: true
          purge: true

      - name: Restore Program Builds
        uses: actions/cache/restore@v4
        with:
          path: ./**/*.so
          key: ${{ runner.os }}-builds-${{ github.sha }}

      - name: Test
        run: pnpm clients:cli:test
